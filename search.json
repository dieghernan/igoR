[{"path":"https://dieghernan.github.io/igoR/articles/igoR.html","id":"definitions","dir":"Articles","previous_headings":"","what":"Definitions","title":"Get started with the igoR package","text":"J. Pevehouse, McManus, Nordstrom (2019): definition Intergovernmental Organization (IGO) original dataset based following criteria: IGO must consist least three members COW-defined state system. IGO must hold regular plenary sessions least every ten years IGO must possess permanent secretariat corresponding headquarters. data sets begins code IGO identifying first year organization functions. cases, individual members listed year accession signature. Version 3.0 IGO data set uses following criteria: Replaced; Succeeded; Superseded; Integrated; Merged; Dies.","code":""},{"path":"https://dieghernan.github.io/igoR/articles/igoR.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"Get started with the igoR package","text":"section provides quick analysis based figures J. C. Pevehouse et al. (2020).","code":""},{"path":"https://dieghernan.github.io/igoR/articles/igoR.html","id":"initial-setup","dir":"Articles","previous_headings":"Analysis","what":"Initial Setup","title":"Get started with the igoR package","text":"first place, create custom ggplot2::theme() named theme_igor, apply figures:","code":"library(igoR)  # Additional libraries library(ggplot2) library(dplyr) theme_igor <- theme(   axis.title = element_blank(),   axis.line.x.bottom = element_line(\"black\"),   axis.line.y.left = element_line(\"black\"),   axis.text = element_text(color = \"black\", family = \"sans\"),   axis.text.y.left = element_text(angle = 90, hjust = 0.5),   legend.position = \"bottom\",   legend.title = element_blank(),   legend.key = element_blank(),   legend.key.width = unit(2, \"cm\"),   legend.text = element_text(family = \"sans\", size = 11.5),   legend.box.background = element_rect(color = \"black\", linewidth = 1),   legend.spacing = unit(1.2 / 100, \"npc\"),   plot.background = element_rect(\"grey90\"),   plot.margin = unit(rep(0.5, 4), \"cm\"),   panel.background = element_rect(\"white\"),   panel.grid = element_blank(),   panel.border = element_rect(fill = NA, colour = \"grey90\"),   panel.grid.major.y = element_line(\"grey90\") )"},{"path":"https://dieghernan.github.io/igoR/articles/igoR.html","id":"igos-overview","dir":"Articles","previous_headings":"Analysis","what":"IGOs overview","title":"Get started with the igoR package","text":"following code extracts number IGOs states included package. years available 1816 2014. Figure 1. IGOs states world system, 1816-2014","code":"# Summarize igos_by_year <- igo_year_format3 %>%   group_by(year) %>%   summarise(value = n(), .groups = \"keep\") %>%   mutate(variable = \"Total IGOs\")  countries_by_year <- state_year_format3 %>%   group_by(year) %>%   summarise(value = n(), .groups = \"keep\") %>%   mutate(variable = \"Number of COW states\")  all_by_year <- igos_by_year %>%   bind_rows(countries_by_year) %>%   # For labelling the plot   mutate(variable = factor(variable,     levels = c(\"Total IGOs\", \"Number of COW states\")   ))   # Plot ggplot(all_by_year, aes(x = year, y = value)) +   geom_line(color = \"black\", aes(linetype = variable)) +   scale_x_continuous(limits = c(1800, 2014)) +   scale_linetype_manual(values = c(\"solid\", \"dashed\")) +   geom_vline(xintercept = c(1945, 1989)) +   ylim(0, 400) +   theme_igor"},{"path":"https://dieghernan.github.io/igoR/articles/igoR.html","id":"igo-births-and-deaths","dir":"Articles","previous_headings":"Analysis","what":"IGO Births and deaths","title":"Get started with the igoR package","text":"plot shows many IGOs “born” “died” year Figure 2. Birth death rates IGOs, 1816-2014","code":"# Births and deads by year  df <- igo_search()  births <- df %>%   mutate(year = sdate) %>%   group_by(year) %>%   summarise(value = n(), .groups = \"keep\") %>%   mutate(variable = \"IGO Births\")  deads <- df %>%   mutate(year = deaddate) %>%   group_by(year) %>%   summarise(value = n(), .groups = \"keep\") %>%   mutate(variable = \"IGO Deaths\")   births_and_deads <- births %>%   bind_rows(deads) %>%   filter(!is.na(year))  # Plot ggplot(births_and_deads, aes(x = year, y = value)) +   geom_line(color = \"black\", aes(linetype = variable)) +   scale_linetype_manual(values = c(\"solid\", \"dashed\")) +   scale_x_continuous(     limits = c(1815, 2015),     breaks = seq(1815, 2015, by = 25)   ) +   ylim(0, 15) +   theme_igor"},{"path":"https://dieghernan.github.io/igoR/articles/igoR.html","id":"igos-across-regions","dir":"Articles","previous_headings":"Analysis","what":"IGOs across regions","title":"Get started with the igoR package","text":"plot number IGOs region. definition region based original definition J. C. Pevehouse et al. (2020), provided complementary replication data set (PRIO 2020): created data frame regions, can classify IGOs region. Figure 3. IGO counts across regions, 1816-2014","code":"# crossreg and universal codes not included  asia <- c(   550, 560, 570, 580, 590, 600, 610, 640, 650, 660,   670, 725, 750, 825, 1030, 1345, 1400, 1530, 1532, 2300,   2770, 3185, 3330, 3560, 3930, 4115, 4150, 4160, 4170,   4190, 4200, 4220, 4265, 4440 )  middle_east <- c(   370, 380, 390, 400, 410, 420, 430, 440, 450, 460,   470, 490, 500, 510, 520, 1110, 1410, 1990, 2000,   2220, 3450, 3800, 4140, 4270, 4380 )  europe <- c(   20, 300, 780, 800, 832, 840, 860, 1020, 1050, 1070, 1080,   1125, 1140, 1390, 1420, 1440, 1563, 1565, 1580, 1585, 1590,   1600, 1610, 1620, 1630, 1640, 1645, 1653, 1660, 1670, 1675,   1680, 1690, 1700, 1710, 1715, 1720, 1730, 1740, 1750, 1760,   1770, 1780, 1790, 1800, 1810, 1820, 1830, 1930, 1970, 1980,   2310, 2325, 2345, 2440, 2450, 2550, 2575, 2610, 2650, 2705,   2890, 2972, 3010, 3095, 3230, 3290, 3360, 3485, 3505, 3585,   3590, 3600, 3610, 3620, 3630, 3640, 3650, 3655, 3660, 3665,   3762, 3810, 3855, 3860, 3910, 4000, 4350, 4450, 4460, 4510,   4520, 4540 )  africa <- c(   30, 40, 50, 60, 80, 90, 100, 110, 115, 120, 125, 130, 140,   150, 155, 160, 170, 180, 190, 200, 210, 225, 240, 250, 260, 280,   290, 690, 700, 710, 940, 1060, 1150, 1170, 1260, 1290, 1310,   1320, 1330, 1340, 1355, 1430, 1450, 1460, 1470, 1475, 1480,   1500, 1510, 1520, 1870, 2080, 2090, 2230, 2330, 2795, 3300,   3310, 3470, 3480, 3510, 3520, 3570, 3740, 3760, 3761, 3790,   3820, 3875, 3905, 3970, 4010, 4030, 4050, 4055, 4080, 4110,   4120, 4130, 4230, 4240, 4250, 4251, 4340, 4365, 4480, 4485,   4490, 4500, 4501, 4503 )  americas <- c(   310, 320, 330, 340, 720, 760, 815, 875, 880, 890, 900,   910, 912, 913, 920, 950, 970, 980, 990, 1000, 1010, 1095,   1130, 1486, 1489, 1490, 1860, 1890, 1920, 1950, 2070, 2110,   2120, 2130, 2140, 2150, 2160, 2170, 2175, 2180, 2190, 2200,   2203, 2206, 2210, 2260, 2340, 2490, 2560, 2980, 3060,   3340, 3370, 3380, 3390, 3400, 3410, 3420, 3428, 3430, 3670,   3680, 3812, 3830, 3880, 3890, 3900, 3925, 3980, 4070, 4100,   4260, 4280, 4370 )  regions <- igo_search() %>%   mutate(region = case_when(     ionum %in% africa ~ \"Africa\",     ionum %in% americas ~ \"Americas\",     ionum %in% asia ~ \"Asia\",     ionum %in% europe ~ \"Europe\",     ionum %in% middle_east ~ \"Middle East\",     TRUE ~ NA   )) %>%   select(ioname, region) # regions dataset created on previous chunk  # All IGOs alligos <- igo_year_format3 %>%   select(ioname, year)  regionsum <- alligos %>%   left_join(regions) %>%   group_by(year, region) %>%   summarise(value = n(), .groups = \"keep\") %>%   filter(!is.na(region)) %>%   # For plotting   mutate(region = factor(region,     levels = c(       \"Asia\", \"Europe\", \"Africa\", \"Americas\",       \"Middle East\"     )   ))   # Plot ggplot(regionsum, aes(x = year, y = value)) +   geom_line(color = \"black\", aes(linetype = region)) +   scale_linetype_manual(     values = c(\"solid\", \"dashed\", \"dotted\", \"dotdash\", \"longdash\")   ) +   guides(linetype = guide_legend(ncol = 2, byrow = TRUE)) +   ylim(0, 80) +   scale_x_continuous(     limits = c(1815, 2015),     breaks = seq(1815, 2015, by = 25)   ) +   theme_igor"},{"path":"https://dieghernan.github.io/igoR/articles/igoR.html","id":"selected-countries-asia","dir":"Articles","previous_headings":"Analysis","what":"Selected Countries: Asia","title":"Get started with the igoR package","text":"Number memberships country. select five countries Asia: India, China, Pakistan, Indonesia Bangladesh. Figure 4. IGO membership: five states Asia, 1865-2014","code":"asia5_cntries <- c(\"China\", \"India\", \"Pakistan\", \"Indonesia\", \"Bangladesh\")  # Five countries of Asia asia5_igos <- igo_state_membership(   state = asia5_cntries, year = 1865:2014,   status = \"Full Membership\" )  asia5 <- asia5_igos %>%   group_by(statenme, year) %>%   summarise(values = n(), .groups = \"keep\") %>%   mutate(statenme = factor(statenme, levels = asia5_cntries))  # Plot ggplot(asia5, aes(x = year, y = values)) +   geom_line(color = \"black\", aes(linetype = statenme)) +   scale_linetype_manual(     values = c(\"solid\", \"dashed\", \"dotted\", \"dotdash\", \"longdash\")   ) +   guides(linetype = guide_legend(ncol = 3, byrow = TRUE)) +   theme(axis.title.y.left = element_text(     family = \"sans\", size = 12,     margin = margin(r = 6)   )) +   scale_x_continuous(     limits = c(1865, 2015),     breaks = seq(1865, 2015, by = 25)   ) +   scale_y_continuous(\"Number of memberships\",     breaks = seq(0, 100, 20),     limits = c(0, 100)   ) +   theme_igor"},{"path":"https://dieghernan.github.io/igoR/articles/igoR.html","id":"shared-memberships","dir":"Articles","previous_headings":"Analysis","what":"Shared memberships","title":"Get started with the igoR package","text":"Number shared full memberships Spain four selected countries: Figure 5. Number IGOs full shared memberships Spain (selected countries), 1816-2014","code":"selected_countries <- c(\"France\", \"Morocco\", \"China\", \"USA\")  spain_selected <- igo_dyadic(\"Spain\", selected_countries)  # Compute number of shared memberships spain_selected <- spain_selected %>%   rowwise() %>%   mutate(values = sum(c_across(aaaid:wassen) == 1))  # Plot ggplot(spain_selected, aes(x = year, y = values)) +   geom_line(color = \"black\", aes(linetype = statenme2)) +   scale_linetype_manual(values = c(\"solid\", \"dashed\", \"dotted\", \"dotdash\")) +   guides(linetype = guide_legend(ncol = 2, byrow = TRUE)) +   theme(axis.title.y.left = element_text(     family = \"sans\", size = 10,     margin = margin(r = 6)   )) +   scale_x_continuous(     limits = c(1815, 2015),     breaks = seq(1815, 2015, by = 25)   ) +   scale_y_continuous(\"Number of memberships\",     breaks = seq(0, 110, 20),     limits = c(0, 110)   ) +   theme_igor +   geom_vline(xintercept = 1939, alpha = 0.2) +   annotate(\"label\", x = 1938, y = 60, size = 3, label = \"Spanish \\nCivil War\") +   geom_vline(xintercept = 1978, alpha = 0.2) +   annotate(\"label\",     x = 1970, y = 100, size = 3,     label = \"Constitution \\nof Spain\"   )"},{"path":[]},{"path":"https://dieghernan.github.io/igoR/articles/mapping.html","id":"evolution-of-the-composition-of-un","dir":"Articles","previous_headings":"","what":"Evolution of the composition of UN","title":"Mapping IGOs","text":"following maps shows evolution countries members United Nations. First extract data: Note map completely accurate, base shapefile contains countries exists 2016. countries, Czechoslovakia, East West Germany included. Now ready plot ggplot2: UN Members","code":"# Extract shapes world <- gisco_get_countries()  # Extract three dates - some errors given that ISO doesnt have every COW Code un_all <- igo_members(\"UN\", c(1950, 1980, 2010), status = \"Full Membership\") %>%   # Add ISO3 Code   mutate(ISO3_CODE = countrycode(ccode, \"cown\", \"iso3c\", warn = FALSE)) %>%   select(year, orgname, ISO3_CODE, category)  # Auxiliar data.frame to collect every ISO3-year pairs  base_df <- expand.grid(   ISO3_CODE = unique(world$ISO3_CODE),   year = unique(un_all$year),   stringsAsFactors = FALSE ) %>%   as_tibble()  # Merge everything with the spatial object un_all_sf <- world %>%   # Expand to all cases   left_join(base_df, by = \"ISO3_CODE\") %>%   # Add info   left_join(un_all, by = c(\"ISO3_CODE\", \"year\")) ggplot(un_all_sf) +   geom_sf(aes(fill = category), color = NA, show.legend = FALSE) +   # Robinson   coord_sf(crs = \"ESRI:54030\") +   facet_wrap(~year, ncol = 1, strip.position = \"left\") +   scale_fill_manual(     values = c(\"Full Membership\" = \"#74A9CF\"),     na.value = \"#E0E0E0\",   ) +   labs(     title = \"UN Members\", caption = gisco_attributions(),   ) +   theme_minimal() +   theme(plot.caption = element_text(face = \"italic\", hjust = 0.15))"},{"path":"https://dieghernan.github.io/igoR/articles/mapping.html","id":"number-of-shared-memberships","dir":"Articles","previous_headings":"","what":"Number of shared memberships","title":"Mapping IGOs","text":"Shared memberships useful identifying regional patterns. following code produces map showing number full memberships shared Australia country world: Shared Full Memberships Australia (2014)","code":"## Number of igos shared - 2014 # Countries alive in 2014 states2014 <- states2016 %>%   filter(styear <= 2014 & endyear >= 2014)  # Shared memberships with Australia shared <- igo_dyadic(\"AUL\", as.character(states2014$statenme),   year = 2014 ) %>%   rowwise() %>%   mutate(shared = sum(c_across(aaaid:wassen) == 1)) %>%   mutate(ISO3_CODE = countrycode(ccode2, \"cown\", \"iso3c\",     warn = FALSE   )) %>%   select(ISO3_CODE, shared)   # Merge with map sharedmap <- world %>%   left_join(shared, by = \"ISO3_CODE\") %>%   select(ISO3_CODE, shared)  # Plot with custom palette pal <- hcl.colors(10, palette = \"Lajolla\")  # Plot ggplot(sharedmap) +   geom_sf(aes(fill = shared), color = NA) +   # Australia   geom_sf(     data = sharedmap %>% filter(ISO3_CODE == \"AUS\"),     fill = \"black\", color = NA,   ) +   # Robinson   coord_sf(crs = \"ESRI:54030\") +   scale_fill_gradientn(colours = pal, n.breaks = 10) +   guides(fill = guide_legend(nrow = 1)) +   labs(     title = \"Shared Full Memberships with Australia (2014)\",     fill = \"Number of IGOs shared\",     caption = gisco_attributions()   ) +   theme_minimal() +   theme(     plot.title = element_text(face = \"bold\", hjust = 0.5),     plot.caption = element_text(face = \"italic\", size = 7, hjust = 0.15),     legend.title = element_text(size = 7),     legend.text = element_text(size = 8),     legend.position = \"bottom\",     legend.direction = \"horizontal\",     legend.title.position = \"top\",     legend.text.position = \"bottom\",     legend.key.width = unit(1.5, \"lines\"),     legend.key.height = unit(0.5, \"lines\")   )"},{"path":"https://dieghernan.github.io/igoR/articles/mapping.html","id":"cross-shared-memberships","dir":"Articles","previous_headings":"","what":"Cross-shared memberships","title":"Mapping IGOs","text":"following map shows relationships countries North America flourished last 90 years, using year representative decade. Shared Full Memberships North America (1930 - 2010)","code":"# Select years years <- seq(1930, 2010, 10)  # Shared memberships cntries <- c(\"USA\", \"CAN\", \"MEX\") all <- igo_dyadic(cntries, cntries, years) %>%   rowwise() %>%   mutate(value = sum(c_across(aaaid:wassen) == 1)) %>%   mutate(ISO3_CODE = countrycode(ccode1, \"cown\", \"iso3c\")) %>%   select(ISO3_CODE, year, value)  # Create map # Get shapes countries_sf <- gisco_get_countries(country = c(\"USA\", \"MEX\", \"CAN\")) %>%   left_join(all, by = \"ISO3_CODE\")  # Map ggplot(countries_sf) +   geom_sf(aes(fill = value), color = NA) +   coord_sf(crs = 2163, xlim = c(-3200000, 3333018)) +   facet_wrap(~year, ncol = 3) +   scale_fill_gradientn(     colors = hcl.colors(10, \"YlGn\", rev = TRUE),     breaks = seq(0, 100, 5)   ) +   guides(fill = guide_legend(reverse = TRUE)) +   labs(     title = \"Shared Full Memberships on North America\",     subtitle = \"(1930-2010)\", fill = \"Shared IGOs\",     caption = gisco_attributions()   ) +   theme_void() +   theme(     plot.title = element_text(face = \"bold\"),     plot.subtitle = element_text(margin = margin(t = 3, b = 10)),     plot.caption = element_text(face = \"italic\"),     legend.box.margin = margin(l = 20),     legend.title = element_text(size = 8),     legend.key.height = unit(1.5, \"lines\"),     legend.key.width = unit(1, \"lines\"),     strip.background = element_rect(fill = \"grey90\", colour = NA)   )"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://dieghernan.github.io/igoR/articles/reference.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"List of IGOs and Countries","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.4.2 (2024-10-31 ucrt) #>  os       Windows Server 2022 x64 (build 20348) #>  system   x86_64, mingw32 #>  ui       RTerm #>  language en #>  collate  English_United States.utf8 #>  ctype    English_United States.utf8 #>  tz       UTC #>  date     2025-02-06 #>  pandoc   3.1.11 @ C:/HOSTED~1/windows/pandoc/31F387~1.11/x64/PANDOC~1.11/ (via rmarkdown) #>  quarto   NA #>  #> ─ Packages ─────────────────────────────────────────────────────────────────── #>  package     * version date (UTC) lib source #>  bslib         0.9.0   2025-01-30 [1] RSPM #>  cachem        1.1.0   2024-05-16 [1] RSPM #>  cli           3.6.3   2024-06-21 [1] RSPM #>  desc          1.4.3   2023-12-10 [1] RSPM #>  digest        0.6.37  2024-08-19 [1] RSPM #>  evaluate      1.0.3   2025-01-10 [1] RSPM #>  fastmap       1.2.0   2024-05-15 [1] RSPM #>  fs            1.6.5   2024-10-30 [1] RSPM #>  htmltools     0.5.8.1 2024-04-04 [1] RSPM #>  htmlwidgets   1.6.4   2023-12-06 [1] RSPM #>  igoR        * 0.2.1   2025-02-06 [1] local #>  jquerylib     0.1.4   2021-04-26 [1] RSPM #>  jsonlite      1.8.9   2024-09-20 [1] RSPM #>  knitr         1.49    2024-11-08 [1] RSPM #>  lifecycle     1.0.4   2023-11-07 [1] RSPM #>  pkgdown       2.1.1   2024-09-17 [1] RSPM #>  R6            2.5.1   2021-08-19 [1] RSPM #>  ragg          1.3.3   2024-09-11 [1] RSPM #>  reactable   * 0.4.4   2023-03-12 [1] RSPM #>  reactR        0.6.1   2024-09-14 [1] RSPM #>  rlang         1.1.5   2025-01-17 [1] RSPM #>  rmarkdown     2.29    2024-11-04 [1] RSPM #>  sass          0.4.9   2024-03-15 [1] RSPM #>  sessioninfo * 1.2.3   2025-02-05 [1] RSPM #>  systemfonts   1.2.1   2025-01-20 [1] RSPM #>  textshaping   1.0.0   2025-01-20 [1] RSPM #>  xfun          0.50    2025-01-07 [1] RSPM #>  yaml          2.3.10  2024-07-26 [1] RSPM #>  #>  [1] D:/a/_temp/Library #>  [2] C:/R/site-library #>  [3] C:/R/library #>  * ── Packages attached to the search path. #>  #> ──────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"https://dieghernan.github.io/igoR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Diego Hernangómez. Author, maintainer, copyright holder.","code":""},{"path":"https://dieghernan.github.io/igoR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hernangómez D (2025). igoR: Intergovernmental Organizations Database. doi:10.32614/CRAN.package.igoR, https://dieghernan.github.io/igoR/. Pevehouse J, Nordstrom T, McManus R, Jamison (2020). “Tracking organizations world: Correlates War IGO Version 3.0 datasets.” Journal Peace Research, 57(3), 492-503. doi:10.1177/0022343319881175.","code":"@Manual{R-igoR,   title = {{igoR}: Intergovernmental Organizations Database},   doi = {10.32614/CRAN.package.igoR},   author = {Diego Hernangómez},   year = {2025},   version = {0.2.1},   url = {https://dieghernan.github.io/igoR/},   abstract = {Tools to extract information from the Intergovernmental Organizations (IGO) Database , version 3, provided by the Correlates of War Project <https://correlatesofwar.org/>. See also Pevehouse, J. C. et al. (2020). Version 3 includes information from 1815 to 2014.}, } @Article{,   author = {Jon CW Pevehouse and Timothy Nordstrom and Roseanne W McManus and Anne Spencer Jamison},   title = {Tracking organizations in the world: The Correlates of War {IGO} Version 3.0 datasets},   journal = {Journal of Peace Research},   volume = {57},   number = {3},   pages = {492-503},   year = {2020},   doi = {10.1177/0022343319881175}, }"},{"path":[]},{"path":"https://dieghernan.github.io/igoR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES ✔️: edit roxygen comment .R file R/. ❌: edit .Rd file man/.","code":""},{"path":"https://dieghernan.github.io/igoR/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://dieghernan.github.io/igoR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look R-CMD-check build status . making changes, run devtools::check() ensure new Notes, Warnings Errors appearing. recommend tidyverse style guide. also use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://dieghernan.github.io/igoR/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://dieghernan.github.io/igoR/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://dieghernan.github.io/igoR/index.html","id":"igor-","dir":"","previous_headings":"","what":"igoR | R package for Intergovernmental Organizations (IGOs)","title":"igoR | R package for Intergovernmental Organizations (IGOs)","text":"goal igoR provide access extract information Intergovernmental Organizations Database (IGOs), version 3, provided Correlates War Project (Pevehouse et al. 2020). dataset (V3) includes information 534 IGOs 1816 2014, well membership information. Source: Intergovernmental Organizations (v3). Documentation vignettes https://dieghernan.github.io/igoR/ Additionally, distribution State System Membership (Correlates War Project 2017) included package.","code":""},{"path":"https://dieghernan.github.io/igoR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"igoR | R package for Intergovernmental Organizations (IGOs)","text":"Install igoR CRAN: can install developing version GitHub: Alternatively, can install igoR using r-universe:","code":"install.packages(\"igoR\") library(remotes) install_github(\"dieghernan/igoR\") # Install igoR in R: install.packages(\"igoR\", repos = c(   \"https://dieghernan.r-universe.dev\",   \"https://cloud.r-project.org\" ))"},{"path":[]},{"path":"https://dieghernan.github.io/igoR/index.html","id":"search-an-igo-by-name","dir":"","previous_headings":"Basic usage","what":"Search an IGO by name:","title":"igoR | R package for Intergovernmental Organizations (IGOs)","text":"Search IGOs related “sugar”:","code":"library(igoR)  result_sugar <- igo_search(\"Sugar\")"},{"path":"https://dieghernan.github.io/igoR/index.html","id":"igo-members","dir":"","previous_headings":"Basic usage","what":"IGO members:","title":"igoR | R package for Intergovernmental Organizations (IGOs)","text":"Composition European Economic Community time: EEC, members (1958) EEC, members (1992)","code":"eec_code <- igo_search(\"EEC\", exact = TRUE)  # Founding eec_init <- igo_members(eec_code$ioname, year = eec_code$sdate) # Latest date eec_end <- igo_members(eec_code$ioname)"},{"path":"https://dieghernan.github.io/igoR/index.html","id":"recommended-packages","dir":"","previous_headings":"","what":"Recommended packages","title":"igoR | R package for Intergovernmental Organizations (IGOs)","text":"countrycode converting country names codes across different systems (ISO3, Eurostat, World Bank, UN, FIPS/GEC, etc..) dplyr data manipulation.","code":""},{"path":"https://dieghernan.github.io/igoR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"igoR | R package for Intergovernmental Organizations (IGOs)","text":"Hernangómez D (2025). igoR: Intergovernmental Organizations Database. doi:10.32614/CRAN.package.igoR, https://dieghernan.github.io/igoR/. BibTeX entry LaTeX users:","code":"@Manual{R-igoR,   title = {{igoR}: Intergovernmental Organizations Database},   doi = {10.32614/CRAN.package.igoR},   author = {Diego Hernangómez},   year = {2025},   version = {0.2.1},   url = {https://dieghernan.github.io/igoR/},   abstract = {Tools to extract information from the Intergovernmental Organizations (IGO) Database , version 3, provided by the Correlates of War Project <https://correlatesofwar.org/>. See also Pevehouse, J. C. et al. (2020). Version 3 includes information from 1815 to 2014.}, }"},{"path":[]},{"path":"https://dieghernan.github.io/igoR/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"igoR | R package for Intergovernmental Organizations (IGOs)","text":"contributions project gratefully acknowledged using allcontributors package following allcontributors specification. Contributions kind welcome!","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://dieghernan.github.io/igoR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://dieghernan.github.io/igoR/reference/igoR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"igoR: Intergovernmental Organizations Database — igoR-package","title":"igoR: Intergovernmental Organizations Database — igoR-package","text":"Tools extract information Intergovernmental Organizations ('IGO') Database , version 3, provided Correlates War Project https://correlatesofwar.org/. See also Pevehouse, J. C. et al. (2020). Version 3 includes information 1815 2014.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/igoR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"igoR: Intergovernmental Organizations Database — igoR-package","text":"Maintainer: Diego Hernangómez diego.hernangomezherrero@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_dyadic.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","title":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","text":"Dyadic version data. unit observation dyad countries. provides summary joint memberships two countries across IGOs time.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_dyadic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","text":"","code":"igo_dyadic(country1, country2, year = 1816:2014, ioname = NULL)"},{"path":"https://dieghernan.github.io/igoR/reference/igo_dyadic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","text":"Codebook Version 3 IGO Data full reference.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_dyadic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","text":"country1, country2 state vector states compared. valid name code state specified states2016. year Year assessed, integer array year. ioname Optional. ioname vector ioname corresponding IGOs assessed. NULL (default), IGOs extracted. See codes igo_search().","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_dyadic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","text":"coded data.frame representing years country dyad (rows) IGOs selected (columns). See Details.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_dyadic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","text":"function tries replicate information contained original file distributed Correlates War Project (dyadic_format3.dta). file included package due size. result data.frame containing common years states selected via country1, country2, year rows. additional column dyadid, computed (1000*ccode1)+ccode2 provided order identify relationships. IGO selected via ioname (default option used) column (using lowercase ioname identifier) provided following code system: See igo_recode_dyadic() section easy way recode numerical values factors. one state IGO full member associate member observer, IGO coded joint membership.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_dyadic.html","id":"differences-with-the-original-dataset","dir":"Reference","previous_headings":"","what":"Differences with the original dataset","title":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","text":"differences results provided function original dataset IGOs regarding \"Missing Data\" (-9) \"State System Member\" (-1). However clear fully replicate values. See Codebook Version 3 IGO Data","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_dyadic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","text":"Pevehouse, J. C., Nordstrom, T., McManus, R. W., & Jamison, . S. (2020). Tracking organizations world: Correlates War IGO Version 3.0 datasets. Journal Peace Research, 57(3), 492–503. doi:10.1177/0022343319881175 .","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/igo_dyadic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the joint membership of a pair of countries across IGOs — igo_dyadic","text":"","code":"usa_esp <- igo_dyadic(\"USA\", \"Spain\") nrow(usa_esp) #> [1] 199 ncol(usa_esp) #> [1] 546  dplyr::tibble(usa_esp) #> # A tibble: 199 × 546 #>    dyadid ccode1 stateabb1 statenme1    state1 ccode2 stateabb2 statenme2 state2 #>     <dbl>  <int> <chr>     <chr>        <chr>   <int> <chr>     <chr>     <chr>  #>  1   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #>  2   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #>  3   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #>  4   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #>  5   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #>  6   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #>  7   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #>  8   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #>  9   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #> 10   2002      2 USA       United Stat… usa       230 SPN       Spain     spain  #> # ℹ 189 more rows #> # ℹ 537 more variables: year <dbl>, ccode <dbl>, state <dbl>, aaaid <dbl>, #> #   aacb <dbl>, aalco <dbl>, aaro <dbl>, aata <dbl>, aatpo <dbl>, abeda <dbl>, #> #   abepseac <dbl>, acc <dbl>, acct <dbl>, acdt <dbl>, aci <dbl>, acml <dbl>, #> #   acp <dbl>, acpeu <dbl>, acs <dbl>, acso <dbl>, acssrb <dbl>, acu <dbl>, #> #   acwl <dbl>, afesd <dbl>, afeximb <dbl>, afgec <dbl>, afpu <dbl>, #> #   afrand <dbl>, afristat <dbl>, afspc <dbl>, afte <dbl>, agc <dbl>, …  # Using custom parameters custom <- igo_dyadic(   country1 = c(\"France\", \"Germany\"), country2 = c(\"Sweden\", \"Austria\"),   year = 1992:1993, ioname = \"EU\" )  dplyr::glimpse(custom) #> Rows: 8 #> Columns: 11 #> $ dyadid    <dbl> 220220, 220220, 255255, 255255, 220220, 220220, 255255, 2552… #> $ ccode1    <int> 220, 220, 255, 255, 220, 220, 255, 255 #> $ stateabb1 <chr> \"FRN\", \"FRN\", \"GMY\", \"GMY\", \"FRN\", \"FRN\", \"GMY\", \"GMY\" #> $ statenme1 <chr> \"France\", \"France\", \"Germany\", \"Germany\", \"France\", \"France\"… #> $ state1    <chr> \"france\", \"france\", \"germany\", \"germany\", \"france\", \"france\"… #> $ ccode2    <int> 380, 380, 380, 380, 305, 305, 305, 305 #> $ stateabb2 <chr> \"SWD\", \"SWD\", \"SWD\", \"SWD\", \"AUS\", \"AUS\", \"AUS\", \"AUS\" #> $ statenme2 <chr> \"Sweden\", \"Sweden\", \"Sweden\", \"Sweden\", \"Austria\", \"Austria\"… #> $ state2    <chr> \"sweden\", \"sweden\", \"sweden\", \"sweden\", \"austria\", \"austria\"… #> $ year      <dbl> 1992, 1993, 1992, 1993, 1992, 1993, 1992, 1993 #> $ eu        <dbl> -1, 0, -1, 0, -1, 0, -1, 0"},{"path":"https://dieghernan.github.io/igoR/reference/igo_members.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract members of an IGO — igo_members","title":"Extract members of an IGO — igo_members","text":"Extract countries belonging IGO specific date.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_members.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract members of an IGO — igo_members","text":"","code":"igo_members(ioname, year = NULL, status = \"Full Membership\")"},{"path":"https://dieghernan.github.io/igoR/reference/igo_members.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract members of an IGO — igo_members","text":"ioname valid ioname IGO specified igo_year_format3. also vector IGOs. year Year assessed, integer array year. NULL latest year available IGO extracted. status Character vector membership status extracted. See Details state_year_format3.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_members.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract members of an IGO — igo_members","text":"data.frame.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/igo_members.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract members of an IGO — igo_members","text":"","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union igo_members(\"EU\", year = 1993) %>% as_tibble() #> # A tibble: 12 × 8 #>    ioname ccode state       statenme        year value category        orgname   #>    <chr>  <dbl> <chr>       <chr>          <dbl> <dbl> <fct>           <chr>     #>  1 EU       200 uk          United Kingdom  1993     1 Full Membership European… #>  2 EU       205 ireland     Ireland         1993     1 Full Membership European… #>  3 EU       210 netherlands Netherlands     1993     1 Full Membership European… #>  4 EU       211 belgium     Belgium         1993     1 Full Membership European… #>  5 EU       212 luxembourg  Luxembourg      1993     1 Full Membership European… #>  6 EU       220 france      France          1993     1 Full Membership European… #>  7 EU       230 spain       Spain           1993     1 Full Membership European… #>  8 EU       235 portugal    Portugal        1993     1 Full Membership European… #>  9 EU       255 germany     Germany         1993     1 Full Membership European… #> 10 EU       325 italy       Italy           1993     1 Full Membership European… #> 11 EU       350 greece      Greece          1993     1 Full Membership European… #> 12 EU       390 denmark     Denmark         1993     1 Full Membership European… igo_members(\"EU\") %>% as_tibble() #> # A tibble: 28 × 8 #>    ioname ccode state       statenme        year value category        orgname   #>    <chr>  <dbl> <chr>       <chr>          <dbl> <dbl> <fct>           <chr>     #>  1 EU       200 uk          United Kingdom  2014     1 Full Membership European… #>  2 EU       205 ireland     Ireland         2014     1 Full Membership European… #>  3 EU       210 netherlands Netherlands     2014     1 Full Membership European… #>  4 EU       211 belgium     Belgium         2014     1 Full Membership European… #>  5 EU       212 luxembourg  Luxembourg      2014     1 Full Membership European… #>  6 EU       220 france      France          2014     1 Full Membership European… #>  7 EU       230 spain       Spain           2014     1 Full Membership European… #>  8 EU       235 portugal    Portugal        2014     1 Full Membership European… #>  9 EU       255 germany     Germany         2014     1 Full Membership European… #> 10 EU       290 poland      Poland          2014     1 Full Membership European… #> # ℹ 18 more rows igo_members(\"NAFTA\", year = c(1995:1998)) %>% as_tibble() #> # A tibble: 12 × 8 #>    ioname ccode state  statenme                  year value category     orgname #>    <chr>  <dbl> <chr>  <chr>                    <dbl> <dbl> <fct>        <chr>   #>  1 NAFTA      2 usa    United States of America  1995     1 Full Member… North … #>  2 NAFTA     20 canada Canada                    1995     1 Full Member… North … #>  3 NAFTA     70 mexico Mexico                    1995     1 Full Member… North … #>  4 NAFTA      2 usa    United States of America  1996     1 Full Member… North … #>  5 NAFTA     20 canada Canada                    1996     1 Full Member… North … #>  6 NAFTA     70 mexico Mexico                    1996     1 Full Member… North … #>  7 NAFTA      2 usa    United States of America  1997     1 Full Member… North … #>  8 NAFTA     20 canada Canada                    1997     1 Full Member… North … #>  9 NAFTA     70 mexico Mexico                    1997     1 Full Member… North … #> 10 NAFTA      2 usa    United States of America  1998     1 Full Member… North … #> 11 NAFTA     20 canada Canada                    1998     1 Full Member… North … #> 12 NAFTA     70 mexico Mexico                    1998     1 Full Member… North …  # Extract different status igo_members(\"ACCT\", status = c(\"Associate Membership\", \"Observer\")) %>%   as_tibble() #> # A tibble: 25 × 8 #>    ioname ccode state       statenme            year value category      orgname #>    <chr>  <dbl> <chr>       <chr>              <dbl> <dbl> <fct>         <chr>   #>  1 ACCT     347 kosovo      Kosovo              2014     2 Associate Me… Franco… #>  2 ACCT     352 cyprus      Cyprus              2014     2 Associate Me… Franco… #>  3 ACCT     694 qatar       Qatar               2014     2 Associate Me… Franco… #>  4 ACCT      42 domrepublic Dominican Republic  2014     3 Observer      Franco… #>  5 ACCT      70 mexico      Mexico              2014     3 Observer      Franco… #>  6 ACCT      94 costarica   Costa Rica          2014     3 Observer      Franco… #>  7 ACCT     165 uruguay     Uruguay             2014     3 Observer      Franco… #>  8 ACCT     290 poland      Poland              2014     3 Observer      Franco… #>  9 ACCT     305 austria     Austria             2014     3 Observer      Franco… #> 10 ACCT     310 hungary     Hungary             2014     3 Observer      Franco… #> # ℹ 15 more rows  # States no members of the UN igo_members(\"UN\", status = \"No Membership\") %>%   as_tibble() #> # A tibble: 2 × 8 #>   ioname ccode state  statenme  year value category      orgname        #>   <chr>  <dbl> <chr>  <chr>    <dbl> <dbl> <fct>         <chr>          #> 1 UN       347 kosovo Kosovo    2014     0 No Membership United Nations #> 2 UN       713 taiwan Taiwan    2014     0 No Membership United Nations  # Vectorized igo_members(c(\"NAFTA\", \"EU\"), year = 1993) %>%   as_tibble() %>%   arrange(state) #> # A tibble: 15 × 8 #>    ioname ccode state       statenme                 year value category orgname #>    <chr>  <dbl> <chr>       <chr>                   <dbl> <dbl> <fct>    <chr>   #>  1 EU       211 belgium     Belgium                  1993     1 Full Me… Europe… #>  2 NAFTA     20 canada      Canada                   1993     1 Full Me… North … #>  3 EU       390 denmark     Denmark                  1993     1 Full Me… Europe… #>  4 EU       220 france      France                   1993     1 Full Me… Europe… #>  5 EU       255 germany     Germany                  1993     1 Full Me… Europe… #>  6 EU       350 greece      Greece                   1993     1 Full Me… Europe… #>  7 EU       205 ireland     Ireland                  1993     1 Full Me… Europe… #>  8 EU       325 italy       Italy                    1993     1 Full Me… Europe… #>  9 EU       212 luxembourg  Luxembourg               1993     1 Full Me… Europe… #> 10 NAFTA     70 mexico      Mexico                   1993     1 Full Me… North … #> 11 EU       210 netherlands Netherlands              1993     1 Full Me… Europe… #> 12 EU       235 portugal    Portugal                 1993     1 Full Me… Europe… #> 13 EU       230 spain       Spain                    1993     1 Full Me… Europe… #> 14 EU       200 uk          United Kingdom           1993     1 Full Me… Europe… #> 15 NAFTA      2 usa         United States of Ameri…  1993     1 Full Me… North …  # Use countrycodes package to get additional codes if (requireNamespace(\"countrycode\", quietly = TRUE)) {   library(countrycode)   EU <- igo_members(\"EU\")   EU$iso3c <- countrycode(EU$ccode, origin = \"cown\", destination = \"iso3c\")    EU$continent <- countrycode(EU$ccode,     origin = \"cown\",     destination = \"continent\"   )    tibble(EU) } #> # A tibble: 28 × 10 #>    ioname ccode state      statenme  year value category orgname iso3c continent #>    <chr>  <dbl> <chr>      <chr>    <dbl> <dbl> <fct>    <chr>   <chr> <chr>     #>  1 EU       200 uk         United …  2014     1 Full Me… Europe… GBR   Europe    #>  2 EU       205 ireland    Ireland   2014     1 Full Me… Europe… IRL   Europe    #>  3 EU       210 netherlan… Netherl…  2014     1 Full Me… Europe… NLD   Europe    #>  4 EU       211 belgium    Belgium   2014     1 Full Me… Europe… BEL   Europe    #>  5 EU       212 luxembourg Luxembo…  2014     1 Full Me… Europe… LUX   Europe    #>  6 EU       220 france     France    2014     1 Full Me… Europe… FRA   Europe    #>  7 EU       230 spain      Spain     2014     1 Full Me… Europe… ESP   Europe    #>  8 EU       235 portugal   Portugal  2014     1 Full Me… Europe… PRT   Europe    #>  9 EU       255 germany    Germany   2014     1 Full Me… Europe… DEU   Europe    #> 10 EU       290 poland     Poland    2014     1 Full Me… Europe… POL   Europe    #> # ℹ 18 more rows"},{"path":"https://dieghernan.github.io/igoR/reference/igo_recode.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions to recode categories — igo_recode_igoyear","title":"Helper functions to recode categories — igo_recode_igoyear","text":"functions convert numerical code igo_year_format3 state_year_format3 factors. igo_recode_igoyear() intended work values igo_year_format3. igo_recode_stateyear() intended work values state_year_format3. igo_recode_dyadic() intended work values igo_dyadic().","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_recode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions to recode categories — igo_recode_igoyear","text":"","code":"igo_recode_igoyear(x)  igo_recode_stateyear(x)  igo_recode_dyadic(x)"},{"path":"https://dieghernan.github.io/igoR/reference/igo_recode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions to recode categories — igo_recode_igoyear","text":"x Numerical value (vector values) recode.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_recode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper functions to recode categories — igo_recode_igoyear","text":"recoded values factors.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/igo_recode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper functions to recode categories — igo_recode_igoyear","text":"","code":"data(\"igo_year_format3\")  # Recode memberships for some countries  library(dplyr)  samp <- igo_year_format3 %>%   select(ioname:year, spain, france) %>%   filter(year > 2000) %>%   as_tibble()  glimpse(samp) #> Rows: 4,661 #> Columns: 5 #> $ ioname  <chr> \"ACPEU\", \"ACPEU\", \"ACPEU\", \"ACPEU\", \"ACPEU\", \"ACPEU\", \"ACPEU\",… #> $ orgname <chr> \"ACP/EU Joint Assembly\", \"ACP/EU Joint Assembly\", \"ACP/EU Join… #> $ year    <dbl> 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 20… #> $ spain   <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,… #> $ france  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…  # Recode samp %>%   mutate(     spain = igo_recode_igoyear(spain),     france = igo_recode_igoyear(france)   ) %>%   glimpse() #> Rows: 4,661 #> Columns: 5 #> $ ioname  <chr> \"ACPEU\", \"ACPEU\", \"ACPEU\", \"ACPEU\", \"ACPEU\", \"ACPEU\", \"ACPEU\",… #> $ orgname <chr> \"ACP/EU Joint Assembly\", \"ACP/EU Joint Assembly\", \"ACP/EU Join… #> $ year    <dbl> 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 20… #> $ spain   <fct> Full Membership, Full Membership, Full Membership, Full Member… #> $ france  <fct> Full Membership, Full Membership, Full Membership, Full Member…"},{"path":"https://dieghernan.github.io/igoR/reference/igo_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search and find an IGO — igo_search","title":"Search and find an IGO — igo_search","text":"Search IGO name string pattern.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search and find an IGO — igo_search","text":"","code":"igo_search(pattern = NULL, exact = FALSE)"},{"path":"https://dieghernan.github.io/igoR/reference/igo_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search and find an IGO — igo_search","text":"pattern regex pattern. NULL function returns dataset IGOs igo_year_format3. Integer values accepted. exact Logical. TRUE exact matches returned.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search and find an IGO — igo_search","text":"data.frame.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search and find an IGO — igo_search","text":"information IGO retrieved based last year available igo_year_format3. additional column label provided. column clean version longorgname","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/igo_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search and find an IGO — igo_search","text":"","code":"# All values library(dplyr) all <- igo_search()  all %>% tibble() #> # A tibble: 534 × 18 #>    ionum ioname   orgname      longorgname label sdate deaddate  dead integrated #>    <dbl> <chr>    <chr>        <chr>       <chr> <dbl>    <dbl> <dbl>      <dbl> #>  1   370 AAAID    Arab Auth. … Arab Autho… \"Ara…  1976       NA     0          0 #>  2   690 AACB     Assoc. of A… Associatio… \"Ass…  1968       NA     0          0 #>  3   630 AALCO    Asian-Afric… Asian-Afri… \"Asi…  1956       NA     0          0 #>  4   230 AARO     Afro-Asian … Afro-Asian… \"Afr…  1962       NA     0          0 #>  5   700 AATA     Assoc. of A… Associatio… \"Ass…  1987       NA     0          0 #>  6   710 AATPO    Assoc. of A… Associatio… \"Ass…  1974     1992     1          1 #>  7   380 ABEDA    Arab Bank f… Arab Bank … \"Ara…  1974       NA     0          0 #>  8   680 ABEPSEAC Assoc. B/t … Associatio… \"Ass…  1968     1975     1          0 #>  9   400 ACC      Arab Cooper… Arab Coope… \"Ara…  1989     1990     1          0 #> 10   270 ACCT     Francophone… Agence de … \"Age…  1970     2005     1          0 #> # ℹ 524 more rows #> # ℹ 9 more variables: replaced <dbl>, igocode <dbl>, version <dbl>, #> #   accuracyofpre1965membershipdates <chr>, sourcesandnotes <chr>, #> #   imputed <dbl>, political <dbl>, social <dbl>, economic <dbl>  # Search by pattern igo_search(\"EU\") %>%   select(ionum:orgname) %>%   tibble() #> # A tibble: 55 × 3 #>    ionum ioname   orgname                                          #>    <dbl> <chr>    <chr>                                            #>  1   680 ABEPSEAC Assoc. B/t EEC and States of East Afr. Community #>  2    10 ACPEU    ACP/EU Joint Assembly                            #>  3   150 APPA     African Petroleum Producers Assoc.               #>  4   540 ASEF     Asia-Europe Foundation                           #>  5  1020 CEEPN    Central & Eastern Eur. Privatization Network     #>  6  1070 CEFTA    Central Europe FTA                               #>  7  1080 CEI      Central European Initiative                      #>  8  1720 CERN     European Org for Nuclear Research                #>  9  1390 COE      Council of Europe                                #> 10  1300 CONFEJES Conference des Ministres jeunesse...Francais     #> # ℹ 45 more rows  igo_search(\"EU\", exact = TRUE) %>%   select(ionum:orgname) %>%   tibble() #> # A tibble: 1 × 3 #>   ionum ioname orgname        #>   <dbl> <chr>  <chr>          #> 1  1830 EU     European Union  # With integers igo_search(10) %>%   select(ionum:orgname) %>%   tibble() #> # A tibble: 62 × 3 #>    ionum ioname orgname                              #>    <dbl> <chr>  <chr>                                #>  1   710 AATPO  Assoc. of Afr. Trade Promotion Orgs. #>  2    10 ACPEU  ACP/EU Joint Assembly                #>  3   100 AFGEC  Afr. Fund Guarantee & Econ. Coop.    #>  4   410 AFTE   Arab Federation for Technical Educ.  #>  5   110 AGC    African Groundnut Council            #>  6   510 AOMR   Arab Org. for Mineral Resources      #>  7   610 ARC    Asian Reinsurance Corp.              #>  8   210 ATO    African Timber Org.                  #>  9   310 AmCC   Amazonian Coop. Council              #> 10   810 BIS    Bank for International Settlements   #> # ℹ 52 more rows  igo_search(10, exact = TRUE) %>%   select(ionum:orgname) %>%   tibble() #> # A tibble: 1 × 3 #>   ionum ioname orgname               #>   <dbl> <chr>  <chr>                 #> 1    10 ACPEU  ACP/EU Joint Assembly  # Several patterns (regex style) igo_search(\"NAFTA|UN|EU\") %>%   select(ionum:orgname) %>%   tibble() #> # A tibble: 196 × 3 #>    ionum ioname   orgname                                                   #>    <dbl> <chr>    <chr>                                                     #>  1   680 ABEPSEAC Assoc. B/t EEC and States of East Afr. Community          #>  2   400 ACC      Arab Cooperation Council                                  #>  3    10 ACPEU    ACP/EU Joint Assembly                                     #>  4   570 ACU      Asian Clearing Union                                      #>  5   420 AFESD    Arab Fund for Social/Economic Development                 #>  6   100 AFGEC    Afr. Fund Guarantee & Econ. Coop.                         #>  7   160 AFPU     African Postal Union                                      #>  8    90 AFRAND   Afr. Foundation for R & D                                 #>  9   725 AFSPC    Association of Financial Supervisors of Pacific Countries #> 10   110 AGC      African Groundnut Council                                 #> # ℹ 186 more rows  # Several patterns Exact (regex style) igo_search(\"^NAFTA$|^UN$|^EU$\") %>%   select(ionum:orgname) %>%   tibble() #> # A tibble: 3 × 3 #>   ionum ioname orgname            #>   <dbl> <chr>  <chr>              #> 1  1830 EU     European Union     #> 2  3670 NAFTA  North American FTA #> 3  4400 UN     United Nations"},{"path":"https://dieghernan.github.io/igoR/reference/igo_search_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds codes and names of a state — igo_search_states","title":"Finds codes and names of a state — igo_search_states","text":"Extract memberships state specific date.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_search_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds codes and names of a state — igo_search_states","text":"","code":"igo_search_states(state)"},{"path":"https://dieghernan.github.io/igoR/reference/igo_search_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds codes and names of a state — igo_search_states","text":"state valid name code state specified states2016(). also array states.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_search_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds codes and names of a state — igo_search_states","text":"data.frame.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/igo_search_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds codes and names of a state — igo_search_states","text":"","code":"library(dplyr)  igo_search_states(\"Spain\") %>% as_tibble() #> # A tibble: 1 × 4 #>   ccode stateabb statenme state #>   <int> <chr>    <chr>    <chr> #> 1   230 SPN      Spain    spain  igo_search_states(c(20, 150)) %>% as_tibble() #> # A tibble: 2 × 4 #>   ccode stateabb statenme state    #>   <int> <chr>    <chr>    <chr>    #> 1    20 CAN      Canada   canada   #> 2   150 PAR      Paraguay paraguay  igo_search_states(\"congo\") %>% as_tibble() #> # A tibble: 1 × 4 #>   ccode stateabb statenme state      #>   <int> <chr>    <chr>    <chr>      #> 1   484 CON      Congo    congobrazz  igo_search_states(c(\"Germany\", \"papal states\")) %>% as_tibble() #> # A tibble: 2 × 4 #>   ccode stateabb statenme     state       #>   <int> <chr>    <chr>        <chr>       #> 1   255 GMY      Germany      germany     #> 2   327 PAP      Papal States papalstates  igo_search_states(c(\"FRN\", \"United Kingdom\", 240, \"italy\")) %>% as_tibble() #> # A tibble: 4 × 4 #>   ccode stateabb statenme       state   #>   <int> <chr>    <chr>          <chr>   #> 1   220 FRN      France         france  #> 2   200 UKG      United Kingdom uk      #> 3   240 HAN      Hanover        hanover #> 4   325 ITA      Italy          italy"},{"path":"https://dieghernan.github.io/igoR/reference/igo_state_membership.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract memberships of a state — igo_state_membership","title":"Extract memberships of a state — igo_state_membership","text":"Extract memberships state specific date.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_state_membership.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract memberships of a state — igo_state_membership","text":"","code":"igo_state_membership(state, year = NULL, status = \"Full Membership\")"},{"path":"https://dieghernan.github.io/igoR/reference/igo_state_membership.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract memberships of a state — igo_state_membership","text":"state valid name code state specified states2016(). also array states. year Year assessed, integer array year. NULL latest year available state extracted. status Character vector membership status extracted. See Details igo_year_format3.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_state_membership.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract memberships of a state — igo_state_membership","text":"data.frame.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/igo_state_membership.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract memberships of a state — igo_state_membership","text":"","code":"# Memberships on two different dates igo_state_membership(\"Spain\", year = 1850) #>   ccode stateabb statenme state year ioname value        category #> 1   230      SPN    Spain spain 1850    SCH     1 Full Membership #>                      orgname                longorgname political social #> 1 Superior Council of Health Superior Council of Health         0      1 #>   economic #> 1        0 igo_state_membership(\"Spain\", year = 1870) #>   ccode stateabb statenme state year ioname value        category #> 1   230      SPN    Spain spain 1870 ICCSLT     1 Full Membership #> 2   230      SPN    Spain spain 1870    ITU     1 Full Membership #> 3   230      SPN    Spain spain 1870    SCH     1 Full Membership #>                           orgname #> 1 Intl Comm of Cape Spartel Light #> 2              Intl Telecom Union #> 3      Superior Council of Health #>                                                     longorgname political #> 1 International Commission of the Cape Spartel Light in Tangier         0 #> 2                         International Telecommunication Union         0 #> 3                                    Superior Council of Health         0 #>   social economic #> 1      0        1 #> 2      0        1 #> 3      1        0 igo_state_membership(\"Spain\", year = 1880:1882) #>    ccode stateabb statenme state year ioname value        category #> 1    230      SPN    Spain spain 1880   BIPM     1 Full Membership #> 2    230      SPN    Spain spain 1880 ICCSLT     1 Full Membership #> 3    230      SPN    Spain spain 1880 IPentC     1 Full Membership #> 4    230      SPN    Spain spain 1880    ITU     1 Full Membership #> 5    230      SPN    Spain spain 1880    SCH     1 Full Membership #> 6    230      SPN    Spain spain 1880    UPU     1 Full Membership #> 7    230      SPN    Spain spain 1881   BIPM     1 Full Membership #> 8    230      SPN    Spain spain 1881 ICCSLT     1 Full Membership #> 9    230      SPN    Spain spain 1881 IPentC     1 Full Membership #> 10   230      SPN    Spain spain 1881    ITU     1 Full Membership #> 11   230      SPN    Spain spain 1881    SCH     1 Full Membership #> 12   230      SPN    Spain spain 1881    UPU     1 Full Membership #> 13   230      SPN    Spain spain 1882   BIPM     1 Full Membership #> 14   230      SPN    Spain spain 1882 ICCSLT     1 Full Membership #> 15   230      SPN    Spain spain 1882 IPentC     1 Full Membership #> 16   230      SPN    Spain spain 1882    ITU     1 Full Membership #> 17   230      SPN    Spain spain 1882    SCH     1 Full Membership #> 18   230      SPN    Spain spain 1882    UPU     1 Full Membership #>                                       orgname #> 1  International Bureau of Weights & Measures #> 2             Intl Comm of Cape Spartel Light #> 3                      Intl Penitentiary Comm #> 4                          Intl Telecom Union #> 5                  Superior Council of Health #> 6                      Universal Postal Union #> 7  International Bureau of Weights & Measures #> 8             Intl Comm of Cape Spartel Light #> 9                      Intl Penitentiary Comm #> 10                         Intl Telecom Union #> 11                 Superior Council of Health #> 12                     Universal Postal Union #> 13 International Bureau of Weights & Measures #> 14            Intl Comm of Cape Spartel Light #> 15                     Intl Penitentiary Comm #> 16                         Intl Telecom Union #> 17                 Superior Council of Health #> 18                     Universal Postal Union #>                                                      longorgname political #> 1            International Bureau of Weights and Measures (BIPM)         0 #> 2  International Commission of the Cape Spartel Light in Tangier         0 #> 3                          International Penitentiary Commission         0 #> 4                          International Telecommunication Union         0 #> 5                                     Superior Council of Health         0 #> 6                                         Universal Postal Union         0 #> 7            International Bureau of Weights and Measures (BIPM)         0 #> 8  International Commission of the Cape Spartel Light in Tangier         0 #> 9                          International Penitentiary Commission         0 #> 10                         International Telecommunication Union         0 #> 11                                    Superior Council of Health         0 #> 12                                        Universal Postal Union         0 #> 13           International Bureau of Weights and Measures (BIPM)         0 #> 14 International Commission of the Cape Spartel Light in Tangier         0 #> 15                         International Penitentiary Commission         0 #> 16                         International Telecommunication Union         0 #> 17                                    Superior Council of Health         0 #> 18                                        Universal Postal Union         0 #>    social economic #> 1       0        1 #> 2       0        1 #> 3       1        0 #> 4       0        1 #> 5       1        0 #> 6       0        1 #> 7       0        1 #> 8       0        1 #> 9       1        0 #> 10      0        1 #> 11      1        0 #> 12      0        1 #> 13      0        1 #> 14      0        1 #> 15      1        0 #> 16      0        1 #> 17      1        0 #> 18      0        1  # Last year igo_state_membership(\"ZAN\")[, 1:7] #>   ccode stateabb statenme    state year ioname value #> 1   511      ZAN Zanzibar zanzibar 1964    CEC     1 #> 2   511      ZAN Zanzibar zanzibar 1964    ITU     1 #> 3   511      ZAN Zanzibar zanzibar 1964     UN     1 #> 4   511      ZAN Zanzibar zanzibar 1964    UPU     1  # Use codes to get countries igo_state_membership(\"2\", year = 1865) #>   ccode stateabb                 statenme state year ioname value #> 1     2      USA United States of America   usa 1865 ICCSLT     1 #>          category                         orgname #> 1 Full Membership Intl Comm of Cape Spartel Light #>                                                     longorgname political #> 1 International Commission of the Cape Spartel Light in Tangier         0 #>   social economic #> 1      0        1  # Extract different status igo_state_membership(\"kosovo\", status = c(   \"Associate Membership\", \"Observer\",   \"Full Membership\" )) #>   ccode stateabb statenme  state year ioname value             category #> 1   347      KOS   Kosovo kosovo 2014   EBRD     1      Full Membership #> 2   347      KOS   Kosovo kosovo 2014   IBRD     1      Full Membership #> 3   347      KOS   Kosovo kosovo 2014    IFC     1      Full Membership #> 4   347      KOS   Kosovo kosovo 2014    IMF     1      Full Membership #> 5   347      KOS   Kosovo kosovo 2014   MIGA     1      Full Membership #> 6   347      KOS   Kosovo kosovo 2014   ACCT     2 Associate Membership #>                                          orgname #> 1 European Bank for Reconstruction & Development #> 2                                     World Bank #> 3                      Int'l Finance Corporation #> 4                             Intl Monetary Fund #> 5       Multilateral Investment Guarantee Agency #> 6                             Francophone Agency #>                                                          longorgname political #> 1            European Bank for Reconstruction and Development (EBRD)         0 #> 2 International Bank for Reconstruction and Development (World Bank)         0 #> 3                            International Finance Corporation (IFC)         0 #> 4                                        International Monetary Fund         0 #> 5                    Multilateral Investment Guarantee Agency (MIGA)         0 #> 6                                   Agence de La Francophonie (ACCT)         0 #>   social economic #> 1      0        1 #> 2      0        1 #> 3      0        1 #> 4      0        1 #> 5      0        1 #> 6      1        0  # Vectorized igo_state_membership(c(\"usa\", \"spain\"), year = 1870:1871) #>   ccode stateabb                 statenme state year ioname value #> 1     2      USA United States of America   usa 1870 ICCSLT     1 #> 2     2      USA United States of America   usa 1871 ICCSLT     1 #> 3   230      SPN                    Spain spain 1870 ICCSLT     1 #> 4   230      SPN                    Spain spain 1870    ITU     1 #> 5   230      SPN                    Spain spain 1870    SCH     1 #> 6   230      SPN                    Spain spain 1871 ICCSLT     1 #> 7   230      SPN                    Spain spain 1871    ITU     1 #> 8   230      SPN                    Spain spain 1871    SCH     1 #>          category                         orgname #> 1 Full Membership Intl Comm of Cape Spartel Light #> 2 Full Membership Intl Comm of Cape Spartel Light #> 3 Full Membership Intl Comm of Cape Spartel Light #> 4 Full Membership              Intl Telecom Union #> 5 Full Membership      Superior Council of Health #> 6 Full Membership Intl Comm of Cape Spartel Light #> 7 Full Membership              Intl Telecom Union #> 8 Full Membership      Superior Council of Health #>                                                     longorgname political #> 1 International Commission of the Cape Spartel Light in Tangier         0 #> 2 International Commission of the Cape Spartel Light in Tangier         0 #> 3 International Commission of the Cape Spartel Light in Tangier         0 #> 4                         International Telecommunication Union         0 #> 5                                    Superior Council of Health         0 #> 6 International Commission of the Cape Spartel Light in Tangier         0 #> 7                         International Telecommunication Union         0 #> 8                                    Superior Council of Health         0 #>   social economic #> 1      0        1 #> 2      0        1 #> 3      0        1 #> 4      0        1 #> 5      1        0 #> 6      0        1 #> 7      0        1 #> 8      1        0  # Use countrycodes package to get additional codes if (requireNamespace(\"countrycode\", quietly = TRUE)) {   library(countrycode)   IT <- igo_state_membership(\"Italy\", year = 1880)   IT$iso3c <- countrycode(IT$ccode, origin = \"cown\", destination = \"iso3c\")   head(IT) } #>   ccode stateabb statenme state year ioname value        category #> 1   325      ITA    Italy italy 1880   BIPM     1 Full Membership #> 2   325      ITA    Italy italy 1880   ECCD     1 Full Membership #> 3   325      ITA    Italy italy 1880 ICCSLT     1 Full Membership #> 4   325      ITA    Italy italy 1880 IPentC     1 Full Membership #> 5   325      ITA    Italy italy 1880    ITU     1 Full Membership #> 6   325      ITA    Italy italy 1880    SCH     1 Full Membership #>                                      orgname #> 1 International Bureau of Weights & Measures #> 2            Euro Comm for Control of Danube #> 3            Intl Comm of Cape Spartel Light #> 4                     Intl Penitentiary Comm #> 5                         Intl Telecom Union #> 6                 Superior Council of Health #>                                                     longorgname political #> 1           International Bureau of Weights and Measures (BIPM)         0 #> 2                 European Commission for Control of the Danube         0 #> 3 International Commission of the Cape Spartel Light in Tangier         0 #> 4                         International Penitentiary Commission         0 #> 5                         International Telecommunication Union         0 #> 6                                    Superior Council of Health         0 #>   social economic iso3c #> 1      0        1   ITA #> 2      1        0   ITA #> 3      0        1   ITA #> 4      1        0   ITA #> 5      0        1   ITA #> 6      1        0   ITA"},{"path":"https://dieghernan.github.io/igoR/reference/igo_year_format3.html","id":null,"dir":"Reference","previous_headings":"","what":"Intergovernmental Organizations (IGO) by year — igo_year_format3","title":"Intergovernmental Organizations (IGO) by year — igo_year_format3","text":"Data IGOs 1815-2014, IGO-year level. Contains one record per IGO-year (years listed 5 year intervals 1965, annually thereafter).","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_year_format3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Intergovernmental Organizations (IGO) by year — igo_year_format3","text":"data.frame 19,335 rows. Relevant fields: ioname: Short abbreviation IGO name. orgname: Full IGO name. year: Calendar Year. afghanistan...zimbabwe: status state IGO. See Details. sdate: start date (year) IGO started. deaddate: dead date (year) IGO dead. longorgname: longer version IGOs name (including previous names) ionum: IGO id number v2.1 v3.0 data. version: COW version number. See Codebook Version 3 IGO Data full reference.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_year_format3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Intergovernmental Organizations (IGO) by year — igo_year_format3","text":"Intergovernmental Organizations (v3), Correlates War Project (IGO Data Stata Files).","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_year_format3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Intergovernmental Organizations (IGO) by year — igo_year_format3","text":"Possible value status state IGO : See igo_recode_igoyear() section easy way recode numerical values factors.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_year_format3.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Intergovernmental Organizations (IGO) by year — igo_year_format3","text":"Raw data used internally igoR.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/igo_year_format3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intergovernmental Organizations (IGO) by year — igo_year_format3","text":"Pevehouse, J. C., Nordstrom, T., McManus, R. W., & Jamison, . S. (2020). Tracking organizations world: Correlates War IGO Version 3.0 datasets. Journal Peace Research, 57(3), 492–503. doi:10.1177/0022343319881175 .","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/igo_year_format3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intergovernmental Organizations (IGO) by year — igo_year_format3","text":"","code":"data(\"state_year_format3\")  # Show a glimpse library(dplyr)  state_year_format3 %>%   select(ccode:afgec) %>%   filter(year > 1990) %>%   glimpse() #> Rows: 4,567 #> Columns: 26 #> $ ccode    <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… #> $ year     <dbl> 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2… #> $ state    <chr> \"usa\", \"usa\", \"usa\", \"usa\", \"usa\", \"usa\", \"usa\", \"usa\", \"usa\"… #> $ aaaid    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aacb     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aalco    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aaro     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aata     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aatpo    <dbl> 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,… #> $ abeda    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ abepseac <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -… #> $ acc      <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -… #> $ acct     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acdt     <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -… #> $ aci      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1… #> $ acml     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1,… #> $ acp      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acpeu    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acs      <dbl> -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acso     <dbl> -9, -9, -9, -9, -9, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acssrb   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acu      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acwl     <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, … #> $ afesd    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ afeximb  <dbl> -1, -1, -9, -9, -9, -9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -… #> $ afgec    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…  # Recode numerical to factors: with a sample sample_state_year <- state_year_format3 %>%   as_tibble() %>%   select(ccode:afgec) %>%   filter(year == 1990)  sample_state_year %>% glimpse() #> Rows: 161 #> Columns: 26 #> $ ccode    <dbl> 2, 20, 31, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 60, 70… #> $ year     <dbl> 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1… #> $ state    <chr> \"usa\", \"canada\", \"bahamas\", \"cuba\", \"haiti\", \"domrepublic\", \"… #> $ aaaid    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aacb     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aalco    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aaro     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aata     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ aatpo    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ abeda    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ abepseac <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -… #> $ acc      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acct     <dbl> 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acdt     <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -… #> $ aci      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acml     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acp      <dbl> 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0… #> $ acpeu    <dbl> 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0… #> $ acs      <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -… #> $ acso     <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -… #> $ acssrb   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acu      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ acwl     <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -… #> $ afesd    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ afeximb  <dbl> -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -… #> $ afgec    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…  # Recode sample_state_year_recoded <- sample_state_year %>%   mutate(across(-c(ccode:state), igo_recode_stateyear))  sample_state_year_recoded %>% glimpse() #> Rows: 161 #> Columns: 26 #> $ ccode    <dbl> 2, 20, 31, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 60, 70… #> $ year     <dbl> 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1… #> $ state    <chr> \"usa\", \"canada\", \"bahamas\", \"cuba\", \"haiti\", \"domrepublic\", \"… #> $ aaaid    <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ aacb     <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ aalco    <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ aaro     <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ aata     <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ aatpo    <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ abeda    <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ abepseac <fct> IGO Not In Existence, IGO Not In Existence, IGO Not In Existe… #> $ acc      <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ acct     <fct> No Membership, Full Membership, No Membership, No Membership,… #> $ acdt     <fct> IGO Not In Existence, IGO Not In Existence, IGO Not In Existe… #> $ aci      <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ acml     <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ acp      <fct> No Membership, No Membership, Full Membership, No Membership,… #> $ acpeu    <fct> No Membership, No Membership, Full Membership, No Membership,… #> $ acs      <fct> IGO Not In Existence, IGO Not In Existence, IGO Not In Existe… #> $ acso     <fct> IGO Not In Existence, IGO Not In Existence, IGO Not In Existe… #> $ acssrb   <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ acu      <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ acwl     <fct> IGO Not In Existence, IGO Not In Existence, IGO Not In Existe… #> $ afesd    <fct> No Membership, No Membership, No Membership, No Membership, N… #> $ afeximb  <fct> IGO Not In Existence, IGO Not In Existence, IGO Not In Existe… #> $ afgec    <fct> No Membership, No Membership, No Membership, No Membership, N…"},{"path":"https://dieghernan.github.io/igoR/reference/states2016.html","id":null,"dir":"Reference","previous_headings":"","what":"State System Membership (v2016) — states2016","title":"State System Membership (v2016) — states2016","text":"list states COW abbreviations ID numbers, plus field state state_year_format3.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/states2016.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"State System Membership (v2016) — states2016","text":"data.frame 243 rows. Relevant fields: ccode: COW country number. stateabb: COW state abbreviation (3 characters). statenme: COW state name. styear...endday: Fields identify beginning end tenure. version: Data file version number. state: Abbreviated state name appear state_year_format3.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/states2016.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"State System Membership (v2016) — states2016","text":"State System Membership (v2016), Correlates War Project.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/states2016.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"State System Membership (v2016) — states2016","text":"data set contains list states international system updated distributed Correlates War Project. data sets identify states, standard Correlates War \"country code\" state number (used throughout Correlates War project data sets), state abbreviations, dates membership states major powers international system. Correlates War project includes state international system 1816-2016 following criteria: Prior 1920 entity must population greater 500,000 diplomatic missions rank charge d'affaires Britain France. 1920 entity must member League Nations United Nations, population greater 500,000 receive diplomatic missions two major powers.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/states2016.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"State System Membership (v2016) — states2016","text":"state variable added original data help comparison across datasets package.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/states2016.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"State System Membership (v2016) — states2016","text":"Correlates War Project. 2017 \"State System Membership List, v2016.\" Online, https://correlatesofwar.org/.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/states2016.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"State System Membership (v2016) — states2016","text":"","code":"# example code data(\"states2016\") dplyr::glimpse(states2016) #> Rows: 243 #> Columns: 11 #> $ ccode    <int> 2, 20, 31, 40, 40, 41, 41, 42, 42, 51, 52, 53, 54, 55, 56, 57… #> $ stateabb <chr> \"USA\", \"CAN\", \"BHM\", \"CUB\", \"CUB\", \"HAI\", \"HAI\", \"DOM\", \"DOM\"… #> $ statenme <chr> \"United States of America\", \"Canada\", \"Bahamas\", \"Cuba\", \"Cub… #> $ styear   <int> 1816, 1920, 1973, 1902, 1909, 1859, 1934, 1894, 1924, 1962, 1… #> $ stmonth  <int> 1, 1, 7, 5, 1, 1, 8, 1, 9, 8, 8, 11, 11, 2, 2, 10, 11, 9, 1, … #> $ stday    <int> 1, 10, 10, 20, 23, 1, 15, 1, 29, 6, 31, 30, 3, 7, 22, 27, 1, … #> $ endyear  <int> 2016, 2016, 2016, 1906, 2016, 1915, 2016, 1916, 2016, 2016, 2… #> $ endmonth <int> 12, 12, 12, 9, 12, 7, 12, 11, 12, 12, 12, 12, 12, 12, 12, 12,… #> $ endday   <int> 31, 31, 31, 25, 31, 28, 31, 29, 31, 31, 31, 31, 31, 31, 31, 3… #> $ version  <int> 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2016, 2… #> $ state    <chr> \"usa\", \"canada\", \"bahamas\", \"cuba\", \"cuba\", \"haiti\", \"haiti\",…"},{"path":"https://dieghernan.github.io/igoR/reference/state_year_format3.html","id":null,"dir":"Reference","previous_headings":"","what":"Country membership to IGO by year — state_year_format3","title":"Country membership to IGO by year — state_year_format3","text":"Data IGOs 1815-2014, country-year level. Contains one record per country-year (years listed 5 year intervals 1965, annually thereafter).","code":""},{"path":"https://dieghernan.github.io/igoR/reference/state_year_format3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Country membership to IGO by year — state_year_format3","text":"data.frame 15,557 rows. Relevant fields: ccode: COW country number, see states2016. year: Calendar Year. state: Abbreviated state name, identical variable names igo_year_format3. aaaid...wassen: IGO variables containing information state membership status. See Details. See Codebook Version 3 IGO Data","code":""},{"path":"https://dieghernan.github.io/igoR/reference/state_year_format3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Country membership to IGO by year — state_year_format3","text":"Intergovernmental Organizations (v3), Correlates War Project (IGO Data Stata Files)","code":""},{"path":"https://dieghernan.github.io/igoR/reference/state_year_format3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Country membership to IGO by year — state_year_format3","text":"Possible value status state IGO : See igo_recode_stateyear() section easy way recode numerical values factors.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/state_year_format3.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Country membership to IGO by year — state_year_format3","text":"Raw data used internally igoR.","code":""},{"path":"https://dieghernan.github.io/igoR/reference/state_year_format3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Country membership to IGO by year — state_year_format3","text":"Pevehouse, J. C., Nordstrom, T., McManus, R. W., & Jamison, . S. (2020). Tracking organizations world: Correlates War IGO Version 3.0 datasets. Journal Peace Research, 57(3), 492–503. doi:10.1177/0022343319881175 .","code":""},{"path":[]},{"path":"https://dieghernan.github.io/igoR/reference/state_year_format3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Country membership to IGO by year — state_year_format3","text":"","code":"data(\"state_year_format3\") dplyr::tibble(state_year_format3) #> # A tibble: 15,557 × 537 #>    ccode  year state aaaid  aacb aalco  aaro  aata aatpo abeda abepseac   acc #>    <dbl> <dbl> <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>    <dbl> <dbl> #>  1     2  1816 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #>  2     2  1817 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #>  3     2  1818 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #>  4     2  1819 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #>  5     2  1820 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #>  6     2  1821 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #>  7     2  1822 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #>  8     2  1823 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #>  9     2  1824 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #> 10     2  1825 usa      -1    -1    -1    -1    -1    -1    -1       -1    -1 #> # ℹ 15,547 more rows #> # ℹ 525 more variables: acct <dbl>, acdt <dbl>, aci <dbl>, acml <dbl>, #> #   acp <dbl>, acpeu <dbl>, acs <dbl>, acso <dbl>, acssrb <dbl>, acu <dbl>, #> #   acwl <dbl>, afesd <dbl>, afeximb <dbl>, afgec <dbl>, afpu <dbl>, #> #   afrand <dbl>, afristat <dbl>, afspc <dbl>, afte <dbl>, agc <dbl>, #> #   agpundo <dbl>, aic <dbl>, aidc <dbl>, aido <dbl>, aioec <dbl>, aipo <dbl>, #> #   aitic <dbl>, alo <dbl>, alsf <dbl>, amco <dbl>, amcow <dbl>, amf <dbl>, …"},{"path":"https://dieghernan.github.io/igoR/news/index.html","id":"igor-021","dir":"Changelog","previous_headings":"","what":"igoR 0.2.1","title":"igoR 0.2.1","text":"CRAN release: 2024-12-17 Regular update documentation.","code":""},{"path":"https://dieghernan.github.io/igoR/news/index.html","id":"igor-020","dir":"Changelog","previous_headings":"","what":"igoR 0.2.0","title":"igoR 0.2.0","text":"CRAN release: 2024-02-05 Internal refactor code. user shouldn’t notice visible change. igo_dyadic() accepts now vector countries also country1 parameter. New helper functions converting numerical values labels: igo_recode_igoyear(), igo_recode_stateyear(), igo_recode_dyadic(). Update docs basic package maintenance.","code":""},{"path":"https://dieghernan.github.io/igoR/news/index.html","id":"igor-015","dir":"Changelog","previous_headings":"","what":"igoR 0.1.5","title":"igoR 0.1.5","text":"CRAN release: 2023-04-14 Update docs examples.","code":""},{"path":"https://dieghernan.github.io/igoR/news/index.html","id":"igor-014","dir":"Changelog","previous_headings":"","what":"igoR 0.1.4","title":"igoR 0.1.4","text":"CRAN release: 2022-08-13 Update docs due CRAN notice.","code":""},{"path":"https://dieghernan.github.io/igoR/news/index.html","id":"igor-013","dir":"Changelog","previous_headings":"","what":"igoR 0.1.3","title":"igoR 0.1.3","text":"CRAN release: 2021-10-20 Update docs.","code":""},{"path":"https://dieghernan.github.io/igoR/news/index.html","id":"igor-012","dir":"Changelog","previous_headings":"","what":"igoR 0.1.2","title":"igoR 0.1.2","text":"CRAN release: 2021-08-04 “Mapping IGOs” article compiled vignette. Update docs. Now markdown format using roxygen2md::roxygen2md(). Moved tests testthat.","code":""},{"path":"https://dieghernan.github.io/igoR/news/index.html","id":"igor-011","dir":"Changelog","previous_headings":"","what":"igoR 0.1.1","title":"igoR 0.1.1","text":"CRAN release: 2021-01-27 Remove lifecycle badge.","code":""},{"path":"https://dieghernan.github.io/igoR/news/index.html","id":"igor-010","dir":"Changelog","previous_headings":"","what":"igoR 0.1.0","title":"igoR 0.1.0","text":"Vectorize igo_members(). Generalize search ignoring case. Add igo_state_membership(). cow_country_codes now internal. Added igoR::states2016 replacement cow_country_codes. Add igo_dyadic(). Add igo_search_states(). vignettes website.","code":""},{"path":"https://dieghernan.github.io/igoR/news/index.html","id":"igor-0009000","dir":"Changelog","previous_headings":"","what":"igoR 0.0.0.9000","title":"igoR 0.0.0.9000","text":"Pre-release.","code":""}]
